#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Fri Dec  8 15:31:33 2023

@author: khanhvu
"""

import gzip
import ProcessPdbFile



def write_to_pdb_file(pdb_id,nanobody_chain, antigen_chain, base_dir, base_destination_file):
    pdb_directory = base_dir + pdb_id + ".pdb"
    destination_file = base_destination_file + pdb_id + "_" + nanobody_chain+ antigen_chain + ".pdb.gz"
    with open(pdb_directory, "r") as file:
        with gzip.open(destination_file,"wb") as des_file:

            for line in file:
                this_type = line[:6]
                this_type = ProcessPdbFile.clean(this_type)
                if(this_type != "ATOM"):
                    continue
                if(line[21] == nanobody_chain or line[21] == antigen_chain):
                    to_write = line.encode("utf-8")
                    des_file.write(to_write)
    

def main():
    """DownloadPDB.read("/home/khanhvu/Downloads/seqdump.txt")
    Identify_nearest_chain.main()
    """
    num = 0
    id_dict = {}
    with open("NearestChain.txt", "r") as file:
        for line in file:
            chain_id = line[:4]
            id_dict[chain_id] = []
            id_dict[chain_id].append(line[22])
            id_dict[chain_id].append(line[35])
            num = num+1
    print(len(id_dict.keys()))

    
    base_dir = "/home/khanhvu/Desktop/PDBfile/"
    base_destination_file = "/home/khanhvu/Desktop/UpdatedPDBFile/"
    for pdb_name in id_dict.keys():
        nano_chain = id_dict[pdb_name][0]
        anti_chain = id_dict[pdb_name][1]
    
        write_to_pdb_file(pdb_name, nano_chain, anti_chain, base_dir, base_destination_file)
        
    
if __name__ == "__main__":
    main()
                
                
                    
                



